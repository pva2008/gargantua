version: "3.9"

services:
  postgres:
    container_name: DB
    image: postgres:13.3
    restart: always
    #    command:
    #      - "postgres"
    #      - "-c"
    #      - "max_connections=50"
    #      - "-c"
    #      - "shared_buffers=1GB"
    #      - "-c"
    #      - "effective_cache_size=4GB"
    #      - "-c"
    #      - "work_mem=16MB"
    #      - "-c"
    #      - "maintenance_work_mem=512MB"
    #      - "-c"
    #      - "random_page_cost=1.1"
    #      - "-c"
    #      - "temp_file_limit=10GB"
    #      - "-c"
    #      - "log_min_duration_statement=200ms"
    #      - "-c"
    #      - "idle_in_transaction_session_timeout=10s"
    #      - "-c"
    #      - "lock_timeout=1s"
    #      - "-c"
    #      - "statement_timeout=60s"
    #      - "-c"
    #      - "shared_preload_libraries=pg_stat_statements"
    #      - "-c"
    #      - "pg_stat_statements.max=10000"
    #      - "-c"
    #      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "project_db"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "123"
    #      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - './src/main/resources/scripts/:/docker-entrypoint-initdb.d/'
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    #    healthcheck:
    #      test: [ "CMD-SHELL", "pg_isready -U admin -d 123" ]
    #      interval: 10s
    #      timeout: 5s
    #      retries: 5
    #      start_period: 10s
    #    deploy:
    #      resources:
    #        limits:
    #          cpus: '1'
    #          memory: 2G
    networks:
      - gargantua

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8888:8080
    networks:
      - gargantua

#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4:7.2
#    environment:
#      PGADMIN_DEFAULT_EMAIL: "habrpguser@habr.com"
#      PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4habr"
#      PGADMIN_CONFIG_SERVER_MODE: "False"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    restart: unless-stopped
##    deploy:
##      resources:
##        limits:
##          cpus: '0.5'
##          memory: 1G
#    networks:
#      - gargantua



volumes:
  postgres_data:
  pgadmin-data:

networks:
  gargantua:
    driver: bridge




#
#  frontend:
#    build: ./frontend
#    volumes:
#      - /app/node_modules
#      - ./frontend:/app
#    restart: always
#    ports:
#      - 3333:3333

#  api:
#    build: ./api
#    volumes:
#      - /app/node_modules
#      - ./api:/app
#    restart: always
#    environment:
#      MYSQL_HOST: mysql
#      MYSQL_USER: root
#      MYSQL_PORT: '3306'
#      MYSQL_PASSWORD: password
#      MYSQL_DB: time_db
#    ports:
#      - 5555:5000
#    depends_on:
#      mysql:
#        condition: service_healthy

#  mysql:
#    image: mysql
#    command: --default-authentication-plugin=mysql_native_password
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: password
#      MYSQL_DATABASE: time_db
#    volumes:
#      - ./sql_db:/var/lib/mysql
#    healthcheck:
#      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
#      timeout: 20s
#      retries: 10



